{"version":3,"sources":["src/leaflet-popup-modifier.js"],"names":["sourceTypes","forEach","type","L","include","nametag","toLowerCase","Popup","mergeOptions","removable","editable","_initLayout","prefix","container","_container","DomUtil","create","options","className","wrapper","_wrapper","_contentNode","DomEvent","disableClickPropagation","disableScrollPropagation","on","stopPropagation","_tipContainer","_tip","closeButton","_closeButton","href","innerHTML","_onCloseButtonClick","_source","userActionButtons","_userActionButtons","removeButton","_removeButton","minWidth","_onRemoveButtonClick","editButton","_editButton","_onEditButtonClick","e","remove","stop","inputFieldWidth","_inputFieldWidth","offsetWidth","style","display","editScreen","_editScreen","inputField","_inputField","setAttribute","getContent","width","inputFieldDiv","get","ruler","thisStandIn","addEventListener","maxWidth","clientWidth","console","log","update","inputActions","_inputActions","cancelButton","_cancelButton","saveButton","_saveButton","_onCancelButtonClick","_onSaveButtonClick","length","setContent","alert"],"mappings":"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","file":"leaflet-popup-modifier.33dbc905.js","sourceRoot":"..","sourcesContent":["// Adding nametag labels to all popup-able leaflet layers\r\nconst sourceTypes = ['Layer','Circle','CircleMarker','Marker','Polyline','Polygon','ImageOverlay','VideoOverlay','SVGOverlay','Rectangle','LayerGroup','FeatureGroup','GeoJSON']\r\n\r\nsourceTypes.forEach( type => {\r\n   L[type].include({\r\n      nametag: type.toLowerCase()\r\n   })\r\n})\r\n\r\n//  Adding new options to the default options of a popup\r\nL.Popup.mergeOptions({\r\n   removable: false,\r\n   editable: false,\r\n})\r\n\r\n// Modifying the popup mechanics\r\nL.Popup.include({\r\n\r\n   // modifying the _initLayout method to include edit and remove buttons, if those options are enabled\r\n\r\n   //  ----------------    Source code  ---------------------------- //\r\n   // original from https://github.com/Leaflet/Leaflet/blob/master/src/layer/Popup.js\r\n   _initLayout: function () {\r\n      var prefix = 'leaflet-popup',\r\n          container = this._container = L.DomUtil.create('div',\r\n         prefix + ' ' + (this.options.className || '') +\r\n         ' leaflet-zoom-animated');\r\n\r\n      var wrapper = this._wrapper = L.DomUtil.create('div', prefix + '-content-wrapper', container);\r\n      this._contentNode = L.DomUtil.create('div', prefix + '-content', wrapper);\r\n\r\n      L.DomEvent.disableClickPropagation(wrapper);\r\n      L.DomEvent.disableScrollPropagation(this._contentNode);\r\n      L.DomEvent.on(wrapper, 'contextmenu', L.DomEvent.stopPropagation);\r\n\r\n      this._tipContainer = L.DomUtil.create('div', prefix + '-tip-container', container);\r\n      this._tip = L.DomUtil.create('div', prefix + '-tip', this._tipContainer);\r\n\r\n      if (this.options.closeButton) {\r\n         var closeButton = this._closeButton = L.DomUtil.create('a', prefix + '-close-button', container);\r\n         closeButton.href = '#close';\r\n         closeButton.innerHTML = '&#215;';\r\n\r\n         L.DomEvent.on(closeButton, 'click', this._onCloseButtonClick, this);\r\n      }\r\n\r\n      //  ----------------    Source code  ---------------------------- //\r\n\r\n\r\n      //  ---------------    My additions  --------------------------- //\r\n\r\n      var nametag\r\n\r\n      if (this.options.nametag){\r\n         nametag = this.options.nametag\r\n      } else if (this._source) {\r\n         nametag =  this._source.nametag\r\n      } else {\r\n         nametag = \"popup\"\r\n      }\r\n\r\n      if (this.options.removable && !this.options.editable){\r\n         var userActionButtons = this._userActionButtons = L.DomUtil.create('div', prefix + '-useraction-buttons', wrapper);\r\n         var removeButton = this._removeButton = L.DomUtil.create('a', prefix + '-remove-button', userActionButtons);\r\n         removeButton.href = '#close';\r\n         removeButton.innerHTML = `Remove this ${nametag}`;\r\n         this.options.minWidth = 110;\r\n\r\n         L.DomEvent.on(removeButton, 'click', this._onRemoveButtonClick, this);\r\n      }\r\n\r\n      if (this.options.editable && !this.options.removable){\r\n         var userActionButtons = this._userActionButtons = L.DomUtil.create('div', prefix + '-useraction-buttons', wrapper);\r\n         var editButton = this._editButton = L.DomUtil.create('a', prefix + '-edit-button', userActionButtons);\r\n         editButton.href = '#edit';\r\n         editButton.innerHTML = 'Edit';\r\n\r\n         L.DomEvent.on(editButton, 'click', this._onEditButtonClick, this);\r\n      }\r\n\r\n      if (this.options.editable && this.options.removable){\r\n         var userActionButtons = this._userActionButtons = L.DomUtil.create('div', prefix + '-useraction-buttons', wrapper);\r\n         var removeButton = this._removeButton = L.DomUtil.create('a', prefix + '-remove-button', userActionButtons);\r\n         removeButton.href = '#close';\r\n         removeButton.innerHTML = `Remove this ${nametag}`;\r\n         var editButton = this._editButton = L.DomUtil.create('a', prefix + '-edit-button', userActionButtons);\r\n         editButton.href = '#edit';\r\n         editButton.innerHTML = 'Edit';\r\n         this.options.minWidth = 160;\r\n\r\n         L.DomEvent.on(removeButton, 'click', this._onRemoveButtonClick, this);\r\n         L.DomEvent.on(editButton, 'click', this._onEditButtonClick, this);\r\n      }\r\n   },\r\n\r\n   _onRemoveButtonClick: function (e) {\r\n      this._source.remove();\r\n      L.DomEvent.stop(e);\r\n   },\r\n\r\n   _onEditButtonClick: function (e) {\r\n      //Needs to be defined first to capture width before changes are applied\r\n      var inputFieldWidth = this._inputFieldWidth = this._container.offsetWidth - 2*19;\r\n\r\n      this._contentNode.style.display = \"none\";\r\n      this._userActionButtons.style.display = \"none\";\r\n\r\n      var wrapper = this._wrapper;\r\n      var editScreen = this._editScreen = L.DomUtil.create('div', 'leaflet-popup-edit-screen', wrapper)\r\n      var inputField = this._inputField = L.DomUtil.create('div', 'leaflet-popup-input', editScreen);\r\n      inputField.setAttribute(\"contenteditable\", \"true\");\r\n      inputField.innerHTML = this.getContent()\r\n\r\n\r\n      //  -----------  Making the input field grow till max width ------- //\r\n      inputField.style.width = inputFieldWidth + 'px';\r\n      var inputFieldDiv = L.DomUtil.get(this._inputField);\r\n\r\n      // create invisible div to measure the text width in pixels\r\n      var ruler = L.DomUtil.create('div', 'leaflet-popup-input-ruler', editScreen);\r\n\r\n      let thisStandIn = this;\r\n\r\n      // Padd event listener to the textinput to trigger a check\r\n      this._inputField.addEventListener(\"keydown\", function(){\r\n      // Check to see if the popup is already at its maxWidth\r\n      // and that text doesnt take up whole field\r\n         if (thisStandIn._container.offsetWidth < thisStandIn.options.maxWidth + 38\r\n            && thisStandIn._inputFieldWidth + 5 < inputFieldDiv.clientWidth){\r\n            ruler.innerHTML = inputField.innerHTML;\r\n\r\n            if (ruler.offsetWidth + 20 > inputFieldDiv.clientWidth){\r\n               console.log('expand now');\r\n               inputField.style.width = thisStandIn._inputField.style.width = ruler.offsetWidth + 10 + 'px';\r\n               thisStandIn.update();\r\n            }\r\n         }\r\n      }, false)\r\n\r\n\r\n      var inputActions = this._inputActions = L.DomUtil.create('div', 'leaflet-popup-input-actions', editScreen);\r\n      var cancelButton = this._cancelButton = L.DomUtil.create('a', 'leaflet-popup-input-cancel', inputActions);\r\n      cancelButton.href = '#cancel';\r\n      cancelButton.innerHTML = 'Cancel';\r\n      var saveButton = this._saveButton = L.DomUtil.create('a', 'leaflet-popup-input-save', inputActions);\r\n      saveButton.href = \"#save\";\r\n      saveButton.innerHTML = 'Save';\r\n\r\n      L.DomEvent.on(cancelButton, 'click', this._onCancelButtonClick, this)\r\n      L.DomEvent.on(saveButton, 'click', this._onSaveButtonClick, this)\r\n\r\n      this.update();\r\n      L.DomEvent.stop(e);\r\n   },\r\n\r\n\r\n   _onCancelButtonClick: function (e) {\r\n      L.DomUtil.remove(this._editScreen);\r\n      this._contentNode.style.display = \"block\";\r\n      this._userActionButtons.style.display = \"flex\";\r\n\r\n      this.update();\r\n      L.DomEvent.stop(e);\r\n   },\r\n\r\n   _onSaveButtonClick: function (e) {\r\n      var inputField = this._inputField;\r\n      if (inputField.innerHTML.length > 0){\r\n         this.setContent(inputField.innerHTML)\r\n      } else {\r\n         alert('Enter something');\r\n      };\r\n\r\n      L.DomUtil.remove(this._editScreen);\r\n      this._contentNode.style.display = \"block\";\r\n      this._userActionButtons.style.display = \"flex\";\r\n\r\n      this.update();\r\n      L.DomEvent.stop(e);\r\n\r\n      //  ---------------------End my additions --------------------------------------- //\r\n\r\n\r\n   }\r\n})\r\n"]}