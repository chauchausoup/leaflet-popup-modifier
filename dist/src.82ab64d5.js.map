{"version":3,"sources":["src/index.js"],"names":["roundNumber","number","tensplace","Math","round","mapOptions","center","zoom","leafletMap","L","map","mapBoxOutdoors","tileLayer","attribution","maxZoom","addTo","sampleMarkerText","removableAndEditable","removable","makeMarker","document","querySelector","addEventListener","markerPosition","getCenter","marker","bindPopup","lat","lng","editable","maxWidth","autoPan","openPopup","marker1","oilrigIcon","Icon","iconUrl","iconSize","iconAnchor","popupAnchor","marker2","icon","nametag"],"mappings":";AACA,SAASA,EAAYC,GAAQC,IAAAA,EAAY,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAA,GAChCC,OAAAA,KAAKC,MAAOH,EAASC,GAAaA,EAI3C,IAAIG,EAAa,CAChBC,OAAQ,CAAC,QAAQ,aACjBC,KAAM,IAIHC,EAAaC,EAAEC,IAAI,eAAgBL,GAGnCM,EAAiBF,EAAEG,UAAU,gGAAiG,CAC7HC,YAAa,uHACbC,QAAS,KACNC,MAAMP,GAERQ,EAAmB,CAGvBC,qBAHuB,+aAQvBC,UAAS,2TAaPC,EAAaC,SAASC,cAAc,eAExCF,EAAWG,iBAAiB,QAAS,WAE/BC,IAAAA,EAAiBf,EAAWgB,YAEnBf,EAAEgB,OAAQF,GACnBR,MAAMP,GACNkB,UACWH,oBAAAA,OAAAA,EAAeI,IACdJ,0BAAAA,OAAAA,EAAeK,KAAQ,CAACV,WAAW,EAAMW,UAAU,EAAMC,SAAU,IAAKC,SAAS,IAC7FC,cAgBN,IAAIC,EAAUxB,EAAEgB,OAAQ,CAAC,OAAS,SAElCQ,EAAQlB,MAAMP,GACXkB,UAAUV,EAAiBC,qBAAuB,CAACC,WAAW,EAAMW,UAAU,EAAMC,SAAU,IAAKC,SAAS,IAC5GC,YAKH,IAAME,EAAa,IAAIzB,EAAE0B,KAAK,CAC5BC,QAAS,8BACTC,SAAU,CAAC,GAAI,IACfC,WAAY,CAAC,GAAI,IACjBC,YAAa,CAAC,GAAI,MAGhBC,EAAU/B,EAAEgB,OAAQ,CAAC,OAAS,QAAU,CAACgB,KAAMP,IAAcnB,MAAMP,GACpEkB,UAAUV,EAAiBE,UAAY,CAACA,WAAW,EAAMW,UAAU,EAAMa,QAAS,sBAAuBZ,SAAU,IAAKC,SAAS","file":"src.82ab64d5.js","sourceRoot":"..","sourcesContent":["// Useful round number function\nfunction roundNumber(number, tensplace = 10){\n  return Math.round( number * tensplace) / tensplace;\n}\n\n// Define some maps options\nvar mapOptions = {\n center: [28.2323,83.99238426],\n zoom: 13\n}\n\n//Create a map and assign it to the map div\nvar leafletMap = L.map('leafletMapid', mapOptions);\n\n//  Add a baselayer \nvar mapBoxOutdoors = L.tileLayer('https://server.arcgisonline.com/ArcGIS/rest/services/Ocean_Basemap/MapServer/tile/{z}/{y}/{x}', {\n     attribution: 'Tiles &copy; Esri &mdash; Sources: GEBCO, NOAA, CHS, OSU, UNH, CSUMB, National Geographic, DeLorme, NAVTEQ, and Esri',\n     maxZoom: 18,\n     }).addTo(leafletMap);\n\nconst sampleMarkerText = {\n// Note how popup content can be written as an HTML string, or as JSX within a single node:\n\n  removableAndEditable: `<h3>This marker is removable and its popup is editable.</h3>\n    <p>Leaflet-Popup-Modifier can make a popup editable, removable, both, or neither.  You can add <code>edtiable</code> or <code>removable</code> to its options to decide what type of popup you want.<br>\n    <br>\n    Go to the <a href=\"https://github.com/slutske22/leaflet-popup-modifier\" target=\"_blank\">GitHub page</a> for this plugin to read more about it.</p>`,\n\n  removable: `<h3>This Jormungandr is removable.</h3>\n    <p>The Leaflet-Popup-Modifier plugin will automatically name each leaflet map element to properly render the \"Remove this {thing}\" link.  If you want to customize the name, you can add the <code>nametag: <i>'yourNametag'</i></code> option to a removable popup.</p>`,\n    \n};\n\n\n\n\n//------------------------------------------------------------------------//\n//                DROP A MARKER IN CENTER\n//------------------------------------------------------------------------//\n\n// Define buttons\nvar makeMarker = document.querySelector('#makeMarker');\n\nmakeMarker.addEventListener('click', function(){\n\n  let markerPosition = leafletMap.getCenter();\n\n  let marker = L.marker( markerPosition )\n     .addTo(leafletMap)\n     .bindPopup(`\n     Latitude: ${markerPosition.lat}<br>\n     Longitude: ${markerPosition.lng}` , {removable: true, editable: true, maxWidth: 600, autoPan: false})\n     .openPopup();\n\n})\n\n\n\n\n\n\n\n\n//------------------------------------------------------------------------//\n//                HARDCODED MARKERS\n//------------------------------------------------------------------------//\n\n\nlet marker1 = L.marker( [33.270, -116.650] );\n\nmarker1.addTo(leafletMap)\n  .bindPopup(sampleMarkerText.removableAndEditable , {removable: true, editable: true, maxWidth: 450, autoPan: false})\n  .openPopup()\n\n\n\n\nconst oilrigIcon = new L.Icon({\n  iconUrl: './src/loch-ness-monster.png',\n  iconSize: [68, 68],\n  iconAnchor: [34, 34],\n  popupAnchor: [1, -10],\n});\n\nlet marker2 = L.marker( [32.570, -117.950], {icon: oilrigIcon} ).addTo(leafletMap)\n  .bindPopup(sampleMarkerText.removable , {removable: true, editable: true, nametag: 'Bringer of Ragnarok', maxWidth: 400, autoPan: false})\n\n"]}